#! /bin/sh

set -x

##### Définition des variables

IF_PROD="eno1";
IF_EXT="enp0s20u1";
NULL_IP="0.0.0.0";

TARGET_SSH="127.0.0.1";

##### Fonctions

function open_out_tcp_strict () {
    iptables -t filter -A OUTPUT -o $1 -s $2 -d $3   \
    -p tcp --dport $4 -m conntrack --ctstate NEW,RELATED,ESTABLISHED -j ACCEPT;

    iptables -t filter -A INPUT  -i $1 -s $3 -d $2 \
    -p tcp --sport $4 -m conntrack --ctstate     RELATED,ESTABLISHED -j ACCEPT;
}

function open_out_tcp_any () {
    iptables -t filter -A OUTPUT -o $1 -s $2   \
    -p tcp --dport $3 -m conntrack --ctstate NEW,RELATED,ESTABLISHED -j ACCEPT;

    iptables -t filter -A INPUT  -i $1   -d $2 \
    -p tcp --sport $3 -m conntrack --ctstate     RELATED,ESTABLISHED -j ACCEPT;
}

function get_ip () {
    if ip link show $1 > /dev/null; then
        ip addr show $1 | grep "inet " | sed 's+.*inet \(.*\)/.*+\1+';
    else
        echo $NULL_IP;
    fi
}

function get_dns () {
    cat /etc/resolv.conf | grep nameserver | awk '{print $2}';
}


MY_IP_EXT=`get_ip $IF_EXT`;
MY_IP_PROD=`get_ip $IF_PROD`;

[[ "$MY_IP_EXT" != "$NULL_IP" ]] && MY_IP_PROD=$MY_IP_EXT && IF_PROD=$IF_EXT;

##### Nettoyage des règles existantes
iptables -F; # Flush (supression des règles)
iptables -X; # Supression des chaînes perso

##### Règles de filtrages

# Par défaut, tout est interdit : bonne pratique de sécurité
# On bloque tout silencieusement…

iptables -t filter -P INPUT DROP;
iptables -t filter -P FORWARD DROP;
iptables -t filter -P OUTPUT DROP;

# Journaliser tout ce qu'on rejette
iptables -N LOG_DROP;
iptables -A LOG_DROP -j LOG --log-prefix '[IPTABLES DROP]: ';
iptables -A LOG_DROP -j DROP;

# Éventuellement : protection contre le scan de port
# Remplacer la règle ci-dessus par :
# iptables -A LOG_DROP -j TARPIT;

# Journaliser certaines choses qu'on accepte
iptables -N LOG_ACCEPT;
iptables -A LOG_ACCEPT -j LOG --log-prefix '[IPTABLES ACCEPT]: ';
iptables -A LOG_ACCEPT -j ACCEPT;

for dns in `get_dns`; do
    iptables -t filter -A OUTPUT -o $IF_PROD -s $MY_IP_PROD -d $dns \
    -p udp -m udp --dport 53 -m conntrack --ctstate NEW,RELATED,ESTABLISHED -j ACCEPT;

    iptables -t filter -A INPUT  -i $IF_PROD -d $MY_IP_PROD -s $dns \
    -p udp -m udp --sport 53 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT;
done;

# Ports sortant ICMP
iptables -t filter -A OUTPUT -o $IF_PROD -s $MY_IP_PROD \
-p icmp --icmp-type echo-request -j LOG_ACCEPT;

iptables -t filter -A INPUT  -i $IF_PROD -d $MY_IP_PROD \
-p icmp --icmp-type echo-reply -j LOG_ACCEPT;

# Ports habituels sur le web
for tcp_port in 143 587 443 80; do
    open_out_tcp_any $IF_PROD $MY_IP_PROD $tcp_port;
done;

# Ports spécifique à une cible
open_out_tcp_strict $IF_PROD $MY_IP_PROD $TARGET_SSH ssh;

# Brouillage
iptables -t filter -A INPUT -p tcp -j TARPIT;
